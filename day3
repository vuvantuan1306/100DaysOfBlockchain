# Day 3: Testing My First Smart Contract with Hardhat

## âœ… What I did today

Today I wrote unit tests for my first Solidity smart contract `HelloWorld.sol` using Hardhat and Chai.

Tasks completed:
- Created a new test file `test/HelloWorld.js`
- Used Hardhatâ€™s built-in testing framework with Mocha and Chai
- Deployed a fresh instance of `HelloWorld` before each test
- Verified:
  - The initial message is correct
  - The message updates correctly via `setMessage()`

Also noticed that default test contract `Lock.sol` (auto-generated by Hardhat) is also being tested â€” total of **11 tests passed** âœ…

## ðŸ“˜ What I learned

- How to write unit tests in JavaScript for Solidity contracts
- Usage of:
  - `describe()` and `it()` blocks from Mocha
  - `expect()` assertions from Chai
  - `ethers.getContractFactory()` and `getSigners()` from ethers.js
- Importance of test automation in blockchain development

## ðŸ§ª Test Summary

